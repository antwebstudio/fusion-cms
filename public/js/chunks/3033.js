"use strict";(self.webpackChunkfusioncms=self.webpackChunkfusioncms||[]).push([[3033],{2945:(e,r,t)=>{t.d(r,{Z:()=>n});const n={props:{field:{type:Object,required:!0},value:{required:!1,default:null},errors:{type:Object,required:!1,default:function(){}}},computed:{model:{get:function(){return this.value},set:function(e){this.$emit("input",e)}}},methods:{hasError:function(e){return this.errors&&this.errors.has(e)},errorMessage:function(e){return this.hasError(e)?this.errors.get(e):""}}}},3033:(e,r,t)=>{t.r(r),t.d(r,{default:()=>l});var n=t(3802);const o={name:"checkbox-fieldtype",mixins:[t(2945).Z],created:function(){_.isEmpty(this.value)&&(this.model=[])}};const l=(0,t(3744).Z)(o,[["render",function(e,r,t,o,l,i){var a=(0,n.resolveComponent)("ui-checkbox"),s=(0,n.resolveComponent)("ui-checkbox-group");return(0,n.openBlock)(),(0,n.createBlock)(s,{label:e.field.name,help:e.field.help,inline:"row"==e.field.settings.display,hasError:e.hasError(e.field.handle),errorMessage:e.errorMessage(e.field.handle)},{default:(0,n.withCtx)((function(){return[((0,n.openBlock)(!0),(0,n.createElementBlock)(n.Fragment,null,(0,n.renderList)(e.field.settings.options,(function(t,o){return(0,n.openBlock)(),(0,n.createBlock)(a,{key:"".concat(e.field.handle,".").concat(o),id:"".concat(e.field.handle,".").concat(o),name:e.field.handle,"native-value":t.value,modelValue:e.model,"onUpdate:modelValue":r[0]||(r[0]=function(r){return e.model=r})},{default:(0,n.withCtx)((function(){return[(0,n.createTextVNode)((0,n.toDisplayString)(t.label),1)]}),void 0,!0),_:2},1032,["id","name","native-value","modelValue"])})),128))]}),void 0,!0),_:1},8,["label","help","inline","hasError","errorMessage"])}]])}}]);