"use strict";(self.webpackChunkfusioncms=self.webpackChunkfusioncms||[]).push([[431],{52:(e,t,o)=>{o.d(t,{Z:()=>n});const n={props:{value:{type:Object,required:!0}},computed:{settings:{get:function(){return this.value.settings||{}},set:function(e){this.$set(this.value.settings,e)}},errors:function(){return this.value.errors||{}}}}},431:(e,t,o)=>{o.r(t),o.d(t,{default:()=>a});var n=o(3802),s={class:"row"};const r={name:"taxonomy-fieldtype-settings",mixins:[o(52).Z],data:function(){return{taxonomies:[]}},computed:{options:function(){return _.map(this.taxonomies,(function(e){return{label:e.name,value:e.id}}))}},created:function(){var e=this;axios.get("/api/taxonomies").then((function(t){return e.taxonomies=t.data.data}))}};const a=(0,o(3744).Z)(r,[["render",function(e,t,o,r,a,i){var u=(0,n.resolveComponent)("ui-select-group");return(0,n.openBlock)(),(0,n.createElementBlock)("div",s,[(0,n.createVNode)(u,{class:"col w-full sm:w-1/2",name:"taxonomy",label:"Taxonomy",help:"The taxonomy from which to show terms.",autocomplete:"off",options:i.options,"has-error":e.errors.has("settings.taxonomy"),"error-message":e.errors.get("settings.taxonomy"),modelValue:e.settings.taxonomy,"onUpdate:modelValue":t[0]||(t[0]=function(t){return e.settings.taxonomy=t})},null,8,["options","has-error","error-message","modelValue"])])}]])}}]);