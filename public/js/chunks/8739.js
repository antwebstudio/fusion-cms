"use strict";(self.webpackChunkfusioncms=self.webpackChunkfusioncms||[]).push([[8739],{52:(e,t,o)=>{o.d(t,{Z:()=>s});const s={props:{value:{type:Object,required:!0}},computed:{settings:{get:function(){return this.value.settings||{}},set:function(e){this.$set(this.value.settings,e)}},errors:function(){return this.value.errors||{}}}}},8739:(e,t,o)=>{o.r(t),o.d(t,{default:()=>a});var s=o(3802),n={class:"row"};var l=o(52),r=o(6269);const i={name:"checkbox-fieldtype-settings",mixins:[l.Z],components:{"option-builder":r.Z}};const a=(0,o(3744).Z)(i,[["render",function(e,t,o,l,r,i){var a=(0,s.resolveComponent)("ui-select-group"),u=(0,s.resolveComponent)("option-builder");return(0,s.openBlock)(),(0,s.createElementBlock)("div",null,[(0,s.createElementVNode)("div",n,[(0,s.createVNode)(a,{class:"col w-full sm:w-1/2",name:"settings.display",label:"Display",help:"Choose whether to display options in a horizontal row or vertical column.",autocomplete:"off",options:[{label:"Column",value:"column"},{label:"Row",value:"row"}],"has-error":e.errors.has("settings.display"),"error-message":e.errors.get("settings.display"),modelValue:e.settings.display,"onUpdate:modelValue":t[0]||(t[0]=function(t){return e.settings.display=t})},null,8,["has-error","error-message","modelValue"])]),(0,s.createVNode)(u,{modelValue:e.settings.options,"onUpdate:modelValue":t[1]||(t[1]=function(t){return e.settings.options=t})},null,8,["modelValue"])])}]])}}]);