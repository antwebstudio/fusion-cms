"use strict";(self.webpackChunkfusioncms=self.webpackChunkfusioncms||[]).push([[6696],{52:(e,s,r)=>{r.d(s,{Z:()=>t});const t={props:{value:{type:Object,required:!0}},computed:{settings:{get:function(){return this.value.settings||{}},set:function(e){this.$set(this.value.settings,e)}},errors:function(){return this.value.errors||{}}}}},6696:(e,s,r)=>{r.r(s),r.d(s,{default:()=>l});var t=r(3802),n={class:"row"};const a={name:"color-picker-fieldtype-settings",mixins:[r(52).Z]};const l=(0,r(3744).Z)(a,[["render",function(e,s,r,a,l,o){var u=(0,t.resolveComponent)("ui-toggle"),i=(0,t.resolveComponent)("ui-input-group");return(0,t.openBlock)(),(0,t.createElementBlock)("div",n,[(0,t.createVNode)(u,{class:"col w-full sm:w-1/2",name:"settings.transparency",label:"Transparency",help:"Should this field allow transparency?","has-error":e.errors.has("settings.transparency"),"error-message":e.errors.get("settings.transparency"),modelValue:e.settings.transparency,"onUpdate:modelValue":s[0]||(s[0]=function(s){return e.settings.transparency=s})},null,8,["has-error","error-message","modelValue"]),(0,t.createVNode)(i,{class:"col w-full sm:w-1/2",name:"settings.default",label:"Default",help:"Default color value for this field.","has-error":e.errors.has("settings.default"),"error-message":e.errors.get("settings.default"),modelValue:e.settings.default,"onUpdate:modelValue":s[1]||(s[1]=function(s){return e.settings.default=s})},null,8,["has-error","error-message","modelValue"])])}]])}}]);